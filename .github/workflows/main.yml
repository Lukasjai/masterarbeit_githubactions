name: Build Spring Boot with Maven

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment to deploy'
        required: true
        default: 'production'
  schedule:
    - cron: '0 23 * * *'
  push:
    branches:
      - master
      - development
    paths-ignore:
      - '**.md'
      - '.github/workflows/**/*'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.github/workflows/**/*'


jobs:

  build_and_verify:
    name: Build and verify
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw -B clean install -DskipTests --no-transfer-progress
        #run: ./mvnw -B clean verify --no-transfer-progress


  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    needs: build_and_verify
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: 'maven'

      - name: Run Maven Tests
        run: ./mvnw -B test --no-transfer-progress

     # - name: Publish Test Results
      #  uses: EnricoMi/publish-unit-test-result-action/linux@v2
       # if: always()
        #with:
         # files: ./target/surefire-reports/TEST-*.xml

  deploy_dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: Dev
    needs: test
    if: github.event_name == 'schedule'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for commits on development in last 24h
        run: |
          git fetch origin development
          COMMITS=$(git rev-list origin/development --since="24 hours ago")
          if [ -n "$COMMITS" ]; then
            echo " Commits found. Proceeding..."
          else
            echo " No commits found in development in last 24h. Skipping..."
            exit 1
          fi
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw -B clean package --no-transfer-progress

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh
      - name: Configure Heroku Git authentication via .netrc
        run: |
          cat > ~/.netrc <<EOF
          machine git.heroku.com
            login _
            password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Add Heroku remote
        run: git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_DEV_SECRET }}.git

      - name: Push to Heroku (force deployment)
        run: git push heroku HEAD:refs/heads/main --force

  deploy_test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: test
    permissions:
      checks: write
      pull-requests: write
    environment: Test
    if: github.ref == 'refs/heads/master' && github.event_name != 'workflow_dispatch' && github.event_name != 'schedule'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw -B clean package --no-transfer-progress

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - name: Configure Heroku Git authentication via .netrc
        run: |
          cat > ~/.netrc <<EOF
          machine git.heroku.com
            login _
            password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Add Heroku remote
        run: git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_TEST_SECRET }}.git

      - name: Push to Heroku (force deployment)
        run: git push heroku HEAD:refs/heads/main --force

  deploy_prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: Prod
    needs: test
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw -B clean package --no-transfer-progress

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - name: Configure Heroku Git authentication via .netrc
        run: |
          cat > ~/.netrc <<EOF
          machine git.heroku.com
            login _
            password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Add Heroku remote
        run: git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_PROD_SECRET }}.git

      - name: Push to Heroku (force deployment)
        run: git push heroku HEAD:refs/heads/main --force
